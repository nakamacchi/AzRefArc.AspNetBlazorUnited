@page "/BizGroupA/ShowAuthorsByTopN/FilterByTopN"

@rendermode InteractiveServerWithoutPrerendering

@* アプリケーションサービス *@
@inject IDbContextFactory<PubsDbContext> dbFactory

<PageTitle>件数に基づくデータ取得</PageTitle>

<h3>件数に基づくデータ取得</h3>
<h5>取得する件数を指定してください。</h5>

<EditForm Model="@vm" OnValidSubmit="@GetData">
    <DataAnnotationsValidator />

    表示する件数 <InputText @bind-Value="vm.Count" class="form-text" /> <button type="submit">表示</button>

    <ValidationSummary />
    
</EditForm>

<hr />

<AuthorsDataGrid Authors="authors" />

@code {
    // 外部パラメータ

    // ビューモデル
    private FilterByTopNViewModel vm = new FilterByTopNViewModel();
    private List<AuthorOverview>? authors = new List<AuthorOverview>();

    // イベントハンドラ(業務ロジック)
    protected async Task GetData()
    {
        authors = null;

        await using (var pubs = await dbFactory.CreateDbContextAsync())
        {
            var query = pubs.Authors.OrderBy(a => a.AuthorId).Take(int.Parse(vm.Count))
                .Select(a => new AuthorOverview()
                {
                    AuthorId = a.AuthorId,
                    AuthorName = a.AuthorFirstName + " " + a.AuthorLastName,
                    Phone = a.Phone,
                    State = a.State,
                    Contract = a.Contract
                });
            authors = await query.ToListAsync();
        }
    }
}
