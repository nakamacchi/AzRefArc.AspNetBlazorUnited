@page "/BizGroupC/ShowAuthorsByState/FilterByState"

@rendermode InteractiveServerWithoutPrerendering

@* アプリケーションサービス *@
@inject IDbContextFactory<PubsDbContext> dbFactory

<PageTitle>州による著者一覧表示</PageTitle>

<h3>州による著者一覧表示</h3>

<h5>州を指定してください。</h5>

<fieldset disabled="@isFormDisabled">
    <select @bind="selectedKey" class="form-select-sm" >
        @if (states != null) foreach(var item in states)
        {
            <option value="@item.Key">@item.Value</option>
        }
    </select>

    <input type="button" @onclick="GetData" class="btn btn-primary" value="データ取得" />
</fieldset>

<hr />

<div class="table-responsive">
    <AuthorsQuickGrid Authors="authors" />
</div>

@code {
    // 外部パラメータ

    // ビューモデル
    private string selectedKey = "";
    private SortedDictionary<string, string> states = new SortedDictionary<string, string>();
    private List<Author>? authors = new List<Author>();
    private bool isFormDisabled = false;

    // イベントハンドラ(アプリケーション処理)
    protected override void OnInitialized()
    {
        states = USStatesUtil.GetAllStates();
    }

    protected async Task GetData()
    {
        isFormDisabled = true;
        authors = null;
        await Task.Delay(500);

        await using (var pubs = await dbFactory.CreateDbContextAsync())
        {
            var query = pubs.Authors.Where(a => a.State == selectedKey);
            authors = await query.ToListAsync();
        }
        isFormDisabled = false;
    }
}
